/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/auth/register': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      requestBody: {
        content: {
          'application/json': components['schemas']['RegistrationData']
        }
      }
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content?: never
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/problem+json': components['schemas']['HttpValidationProblemDetails']
          }
        }
      }
    }
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/auth/login': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: {
      parameters: {
        query?: {
          useCookies?: boolean
          useSessionCookies?: boolean
        }
        header?: never
        path?: never
        cookie?: never
      }
      requestBody: {
        content: {
          'application/json': components['schemas']['LoginRequest']
        }
      }
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['AccessTokenResponse']
          }
        }
      }
    }
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/auth/refresh': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      requestBody: {
        content: {
          'application/json': components['schemas']['RefreshRequest']
        }
      }
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['AccessTokenResponse']
          }
        }
      }
    }
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/auth/confirmEmail': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['MapAllIdentityApi-auth/confirmEmail']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/auth/resendConfirmationEmail': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      requestBody: {
        content: {
          'application/json': components['schemas']['ResendConfirmationEmailRequest']
        }
      }
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content?: never
        }
      }
    }
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/auth/forgotPassword': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      requestBody: {
        content: {
          'application/json': components['schemas']['ForgotPasswordRequest']
        }
      }
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content?: never
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/problem+json': components['schemas']['HttpValidationProblemDetails']
          }
        }
      }
    }
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/auth/resetPassword': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      requestBody: {
        content: {
          'application/json': components['schemas']['ResetPasswordRequest']
        }
      }
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content?: never
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/problem+json': components['schemas']['HttpValidationProblemDetails']
          }
        }
      }
    }
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/auth/manage/2fa': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      requestBody: {
        content: {
          'application/json': components['schemas']['TwoFactorRequest']
        }
      }
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['TwoFactorResponse']
          }
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/problem+json': components['schemas']['HttpValidationProblemDetails']
          }
        }
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown
          }
          content?: never
        }
      }
    }
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/auth/manage/info': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      requestBody?: never
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['InfoResponse']
          }
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/problem+json': components['schemas']['HttpValidationProblemDetails']
          }
        }
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown
          }
          content?: never
        }
      }
    }
    put?: never
    post: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      requestBody: {
        content: {
          'application/json': components['schemas']['InfoRequest']
        }
      }
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['InfoResponse']
          }
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/problem+json': components['schemas']['HttpValidationProblemDetails']
          }
        }
        /** @description Not Found */
        404: {
          headers: {
            [name: string]: unknown
          }
          content?: never
        }
      }
    }
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/company': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['GetCompanies']
    put: operations['ChangeCompany']
    post: operations['AddCompany']
    delete: operations['DeleteCompanies']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/company/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['GetCompanyById']
    put: operations['ChangeCompaniesById']
    post: operations['AddCompanyById']
    delete: operations['DeleteCompanyById']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/company/{id}/users': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['GetCompanyUsers']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/company/{id}/revenue': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['GetCompanyRevenue']
    put?: never
    post: operations['CreateCompanyRevenue']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/employee': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['GetEmployees']
    put: operations['ChangeEmployee']
    post: operations['AddEmployee']
    delete: operations['DeleteEmployee']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/employee/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['GetEmployeeById']
    put: operations['ChangeEmployeeById']
    post?: never
    delete: operations['DeleteEmployeeById']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/weatherforecast': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['GetWeatherForecast']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/office': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['GetOffices']
    put: operations['ChangeOffices']
    post: operations['AddOffices']
    delete: operations['DeleteOffices']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/office/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['GetOfficesById']
    put: operations['ChangeOfficesById']
    post?: never
    delete: operations['DeleteOfficesById']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/package': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['GetPackages']
    put: operations['ChangePackages']
    post: operations['AddPackages']
    delete: operations['DeletePackages']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/package/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['GetPackagesById']
    put: operations['ChangePackagesById']
    post?: never
    delete: operations['DeletePackagesById']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/package/track/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['GetTrackPackagesById']
    put: operations['ChangeTrackPackagesById']
    post?: never
    delete: operations['DeleteTrackPackagesById']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/package/price': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['GetPackagePrice']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/package/user/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['GetPackagesByUser']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/package/status': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['GetPackagesStatuses']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/position': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['GetPositions']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/role': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['GetRoles']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/users': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['GetUsers']
    put: operations['ChangeUserDto']
    post: operations['AddUser']
    delete: operations['DeleteUsers']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/users/{id}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['GetUser']
    put: operations['ChangeUser']
    post?: never
    delete: operations['DeleteUser']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/users/{id}/role': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete: operations['DeleteUserRole']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/users/current': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['GetCurrentUser']
    put: operations['UpdateCurrentUser']
    post?: never
    delete: operations['DeleteCurrentUser']
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/users/current/Company': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['GetCurrentUserCompany']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/users/current/password': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put: operations['PasswordChangeCurrentUser']
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/users/current/secrets': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get: operations['GetCurrentUserSecrets']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    AccessTokenResponse: {
      readonly tokenType?: string | null
      accessToken: string | null
      /** Format: int64 */
      expiresIn: number
      refreshToken: string | null
    }
    AddCompanyDto: {
      name?: string | null
      /** Format: date */
      creationDate?: string | null
      address?: string | null
    }
    AddEmployeeDto: {
      id: string | null
      /** Format: double */
      salary: number
      /** Format: int32 */
      positionId: number
      /** Format: int32 */
      officeId: number
    }
    AddOfficeDto: {
      address: string | null
      phoneNumber?: string | null
      companyName: string | null
    }
    AddPackageDto: {
      senderEmail?: string | null
      receiverEmail?: string | null
      deliveryAddress?: string | null
      toAdress?: string | null
      companyName?: string | null
      /** Format: double */
      price?: number
      /** Format: double */
      weight?: number
      description?: string | null
      fragile?: string | null
      hazardous?: string | null
    }
    AddUserDto: {
      firstName?: string | null
      lastName?: string | null
      email: string | null
      /** Format: date */
      birthDate?: string | null
      password: string | null
      phoneNumber?: string | null
      address?: string | null
      role?: string | null
    }
    ApplicationUser: {
      /** Format: uuid */
      id?: string
      userName?: string | null
      normalizedUserName?: string | null
      email?: string | null
      normalizedEmail?: string | null
      emailConfirmed?: boolean
      passwordHash?: string | null
      securityStamp?: string | null
      concurrencyStamp?: string | null
      phoneNumber?: string | null
      phoneNumberConfirmed?: boolean
      twoFactorEnabled?: boolean
      /** Format: date-time */
      lockoutEnd?: string | null
      lockoutEnabled?: boolean
      /** Format: int32 */
      accessFailedCount?: number
      firstName?: string | null
      lastName?: string | null
      /** Format: date */
      birthDate?: string | null
      address?: string | null
      employee?: components['schemas']['Employee']
      sendPackages?: components['schemas']['Package'][] | null
      recievedPackages?: components['schemas']['Package'][] | null
      userRoles?: components['schemas']['ApplicationUserRole'][] | null
    }
    ApplicationUserRole: {
      /** Format: uuid */
      userId?: string
      /** Format: uuid */
      roleId?: string
      user?: components['schemas']['ApplicationUser']
      role?: components['schemas']['UserRole']
    }
    ChangeCompanyDto: {
      /** Format: int32 */
      id?: number
      name?: string | null
      /** Format: date */
      creationDate?: string
      address?: string | null
    }
    ChangeEmployeeDto: {
      id?: string | null
      /** Format: double */
      salary: number
      /** Format: int32 */
      positionId: number
      /** Format: int32 */
      officeId: number
    }
    ChangeOfficeDto: {
      /** Format: int32 */
      id?: number | null
      address?: string | null
      phoneNumber?: string | null
    }
    ChangePackageDto: {
      id?: string | null
      status?: string | null
      address?: string | null
      toAdress?: string | null
    }
    ChangeUserDto: {
      firstName?: string | null
      lastName?: string | null
      email?: string | null
      /** Format: date */
      birthDate?: string | null
      password?: string | null
      address?: string | null
      phoneNumber?: string | null
      role?: string | null
    }
    Company: {
      /** Format: int32 */
      id?: number
      name?: string | null
      /** Format: date */
      creationDate?: string
      address?: string | null
      offices?: components['schemas']['Office'][] | null
      companyRevenues?: components['schemas']['CompanyRevenue'][] | null
      companyRate?: components['schemas']['CompanyRate']
    }
    CompanyGetDto: {
      /** Format: int32 */
      id?: number
      name?: string | null
      address?: string | null
      /** Format: date */
      creationDate?: string
    }
    CompanyRate: {
      /** Format: int32 */
      companyId?: number
      /** Format: double */
      packageRatePerGram?: number
      /** Format: double */
      officeDeliveryRate?: number
      /** Format: double */
      homeDeliveryRate?: number
      /** Format: double */
      hazardousRate?: number
      /** Format: double */
      fragileRate?: number
      company?: components['schemas']['Company']
    }
    CompanyRevenue: {
      /** Format: int32 */
      id?: number
      /** Format: int32 */
      companyId?: number
      /** Format: double */
      revenue?: number
      /** Format: date */
      date?: string
      company?: components['schemas']['Company']
    }
    CompanyUserDto: {
      /** Format: uuid */
      id?: string | null
      firstName?: string | null
      lastName?: string | null
      email?: string | null
      /** Format: date */
      birthDate?: string | null
      phoneNumber?: string | null
      address?: string | null
    }
    CreatedUserDto: {
      firstName?: string | null
      lastName?: string | null
      email: string | null
      /** Format: date */
      birthDate?: string | null
      phoneNumber?: string | null
      role?: string | null
    }
    DeleteUserRoleDto: {
      role?: string | null
      id?: string | null
    }
    Employee: {
      /** Format: uuid */
      id?: string
      /** Format: date */
      hireDate?: string
      /** Format: int32 */
      positionId?: number
      /** Format: int32 */
      officeId?: number
      /** Format: double */
      salary?: number
      office?: components['schemas']['Office']
      position?: components['schemas']['Position']
      user?: components['schemas']['ApplicationUser']
      registerPackages?: components['schemas']['Package'][] | null
      deliveredPackages?: components['schemas']['Package'][] | null
    }
    EmployeeDto: {
      /** Format: uuid */
      id?: string | null
      firstName?: string | null
      lastName?: string | null
      email?: string | null
      /** Format: date */
      birthDate?: string | null
      phoneNumber?: string | null
      address?: string | null
      roles?: string[] | null
      /** Format: date */
      hireDate?: string
      position?: string | null
      /** Format: int32 */
      officeId?: number
      /** Format: double */
      salary?: number
    }
    ForgotPasswordRequest: {
      email: string | null
    }
    GetOfficesDto: {
      /** Format: int32 */
      id: number
      address: string | null
      phoneNumber?: string | null
      /** Format: int32 */
      companyId: number
      companyName: string | null
    }
    GetPackagesDto: {
      id?: string | null
      trackingNumber?: string | null
      status?: string | null
      /** Format: date-time */
      deliveryDate?: string | null
      /** Format: date-time */
      shippingDate?: string | null
      senderEmail?: string | null
      receiverEmail?: string | null
      companyName?: string | null
      registarEmployeeEmail?: string | null
      courierId?: string | null
      deliveryAddress?: string | null
      toAdress?: boolean
      /** Format: double */
      price?: number
      packageInfo?: components['schemas']['PackageInfoDto']
    }
    HttpValidationProblemDetails: {
      type?: string | null
      title?: string | null
      /** Format: int32 */
      status?: number | null
      detail?: string | null
      instance?: string | null
      errors?: {
        [key: string]: string[] | undefined
      } | null
      [key: string]: unknown
    }
    InfoRequest: {
      newEmail?: string | null
      newPassword?: string | null
      oldPassword?: string | null
    }
    InfoResponse: {
      email: string | null
      isEmailConfirmed: boolean
    }
    LoginRequest: {
      email: string | null
      password: string | null
      twoFactorCode?: string | null
      twoFactorRecoveryCode?: string | null
    }
    Office: {
      /** Format: int32 */
      id?: number
      address?: string | null
      /** Format: tel */
      phoneNumber?: string | null
      /** Format: int32 */
      companyId?: number
      company?: components['schemas']['Company']
      employees?: components['schemas']['Employee'][] | null
    }
    Package: {
      /** Format: uuid */
      id?: string
      trackerNumber?: string | null
      /** Format: int32 */
      packageStatusId?: number
      /** Format: date-time */
      deliveryDate?: string | null
      /** Format: date-time */
      shippingDate?: string | null
      /** Format: uuid */
      senderId?: string
      /** Format: uuid */
      receiverId?: string
      /** Format: uuid */
      registrarEmployeeId?: string | null
      /** Format: uuid */
      courierId?: string | null
      /** Format: double */
      price?: number
      companyName?: string | null
      registrarEmployee?: components['schemas']['Employee']
      packageInfo?: components['schemas']['PackageInfo']
      deliveryAddress?: string | null
      toAdress?: boolean
      status?: components['schemas']['PackageStatus']
      courier?: components['schemas']['Employee']
      sender?: components['schemas']['ApplicationUser']
      receiver?: components['schemas']['ApplicationUser']
    }
    PackageInfo: {
      /** Format: uuid */
      packageId?: string
      /** Format: double */
      weight?: number
      description?: string | null
      fragile?: boolean | null
      hazardous?: boolean | null
      package?: components['schemas']['Package']
    }
    PackageInfoDto: {
      /** Format: double */
      weight?: number
      description?: string | null
      fragile?: boolean | null
      hazardous?: boolean | null
    }
    PackageStatus: {
      /** Format: int32 */
      id?: number
      status?: string | null
      packages?: components['schemas']['Package'][] | null
    }
    PackageStatusDto: {
      /** Format: int32 */
      id?: number
      status?: string | null
    }
    Position: {
      /** Format: int32 */
      id?: number
      positionType?: string | null
      positionInfo?: string | null
    }
    RefreshRequest: {
      refreshToken: string | null
    }
    RegistrationData: {
      email: string | null
      password: string | null
      firstName: string | null
      lastName: string | null
      /** Format: date */
      birthDate: string
    }
    ResendConfirmationEmailRequest: {
      email: string | null
    }
    ResetPasswordRequest: {
      email: string | null
      resetCode: string | null
      newPassword: string | null
    }
    TwoFactorRequest: {
      enable?: boolean | null
      twoFactorCode?: string | null
      resetSharedKey?: boolean
      resetRecoveryCodes?: boolean
      forgetMachine?: boolean
    }
    TwoFactorResponse: {
      sharedKey: string | null
      /** Format: int32 */
      recoveryCodesLeft: number
      recoveryCodes?: string[] | null
      isTwoFactorEnabled: boolean
      isMachineRemembered: boolean
    }
    UserDto: {
      /** Format: uuid */
      id?: string | null
      firstName?: string | null
      lastName?: string | null
      email?: string | null
      /** Format: date */
      birthDate?: string | null
      phoneNumber?: string | null
      address?: string | null
      roles?: string[] | null
    }
    UserPasswordChangeDto: {
      currentPassword: string | null
      newPassword: string | null
    }
    UserRole: {
      name?: string | null
      normalizedName?: string | null
      concurrencyStamp?: string | null
      /** Format: uuid */
      id?: string
      userRoles?: components['schemas']['ApplicationUserRole'][] | null
    }
    UserSecretsDto: {
      id: string | null
      email: string | null
      /** Format: int32 */
      receivedPackageCount: number
      /** Format: int32 */
      sentPackageCount: number
    }
    WeatherForecast: {
      /** Format: date */
      date?: string
      /** Format: int32 */
      temperatureC?: number
      /** Format: int32 */
      readonly temperatureF?: number
      summary?: string | null
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  'MapAllIdentityApi-auth/confirmEmail': {
    parameters: {
      query: {
        userId: string
        code: string
        changedEmail?: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  GetCompanies: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CompanyGetDto'][]
        }
      }
    }
  }
  ChangeCompany: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ChangeCompanyDto'][]
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  AddCompany: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AddCompanyDto']
      }
    }
    responses: {
      /** @description Created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AddCompanyDto']
        }
      }
    }
  }
  DeleteCompanies: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  GetCompanyById: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CompanyGetDto']
        }
      }
    }
  }
  ChangeCompaniesById: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ChangeCompanyDto']
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  AddCompanyById: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AddCompanyDto']
      }
    }
    responses: {
      /** @description Created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AddCompanyDto']
        }
      }
    }
  }
  DeleteCompanyById: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  GetCompanyUsers: {
    parameters: {
      query: {
        name: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CompanyUserDto'][]
        }
      }
    }
  }
  GetCompanyRevenue: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CompanyRevenue'][]
        }
      }
    }
  }
  CreateCompanyRevenue: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': number
        }
      }
    }
  }
  GetEmployees: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['EmployeeDto'][]
        }
      }
    }
  }
  ChangeEmployee: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ChangeEmployeeDto'][]
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ChangeEmployeeDto'][]
        }
      }
    }
  }
  AddEmployee: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AddEmployeeDto']
      }
    }
    responses: {
      /** @description Created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  DeleteEmployee: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  GetEmployeeById: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['EmployeeDto']
        }
      }
    }
  }
  ChangeEmployeeById: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ChangeEmployeeDto']
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  DeleteEmployeeById: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  GetWeatherForecast: {
    parameters: {
      query: {
        num: number
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['WeatherForecast'][]
        }
      }
    }
  }
  GetOffices: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['GetOfficesDto'][]
        }
      }
    }
  }
  ChangeOffices: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ChangeOfficeDto'][]
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  AddOffices: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AddOfficeDto']
      }
    }
    responses: {
      /** @description Created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AddOfficeDto']
        }
      }
    }
  }
  DeleteOffices: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  GetOfficesById: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['GetOfficesDto']
        }
      }
    }
  }
  ChangeOfficesById: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ChangeOfficeDto']
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  DeleteOfficesById: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  GetPackages: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['GetPackagesDto'][]
        }
      }
    }
  }
  ChangePackages: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ChangePackageDto'][]
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  AddPackages: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AddPackageDto']
      }
    }
    responses: {
      /** @description Created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['AddPackageDto']
        }
      }
    }
  }
  DeletePackages: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  GetPackagesById: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['GetPackagesDto']
        }
      }
    }
  }
  ChangePackagesById: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ChangePackageDto']
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  DeletePackagesById: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  GetTrackPackagesById: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['GetPackagesDto']
        }
      }
    }
  }
  ChangeTrackPackagesById: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ChangePackageDto']
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  DeleteTrackPackagesById: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  GetPackagePrice: {
    parameters: {
      query: {
        company: string
        toAdress: string
        weight: string
        fragile: string
        hazardous: string
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': number
        }
      }
    }
  }
  GetPackagesByUser: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['GetPackagesDto'][]
        }
      }
    }
  }
  GetPackagesStatuses: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['PackageStatusDto'][]
        }
      }
    }
  }
  GetPositions: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['Position'][]
        }
      }
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  GetRoles: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['UserRole'][]
        }
      }
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  GetUsers: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['UserDto'][]
        }
      }
    }
  }
  ChangeUserDto: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ChangeUserDto'][]
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ChangeUserDto'][]
        }
      }
    }
  }
  AddUser: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['AddUserDto']
      }
    }
    responses: {
      /** @description Created */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['CreatedUserDto']
        }
      }
    }
  }
  DeleteUsers: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  GetUser: {
    parameters: {
      query: {
        type: string
      }
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['UserDto']
        }
      }
    }
  }
  ChangeUser: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ChangeUserDto']
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ChangeUserDto']
        }
      }
    }
  }
  DeleteUser: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  DeleteUserRole: {
    parameters: {
      query?: never
      header?: never
      path: {
        id: string
      }
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['DeleteUserRoleDto']
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  GetCurrentUser: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['UserDto']
        }
      }
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  UpdateCurrentUser: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['ChangeUserDto']
      }
    }
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ChangeUserDto']
        }
      }
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  DeleteCurrentUser: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  GetCurrentUserCompany: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': number
        }
      }
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  PasswordChangeCurrentUser: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['UserPasswordChangeDto']
      }
    }
    responses: {
      /** @description No Content */
      204: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
  GetCurrentUserSecrets: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description OK */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['UserSecretsDto']
        }
      }
      /** @description Not Found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content?: never
      }
    }
  }
}
